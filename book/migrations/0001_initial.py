# Generated by Django 3.0.5 on 2023-05-19 18:40

import book.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('group', '0008_auto_20230202_1527'),
        ('qcm', '0096_auto_20230504_1753'),
        ('bibliotex', '0022_auto_20230418_0916'),
        ('socle', '0010_auto_20230106_1002'),
        ('flashcard', '0029_auto_20220204_1522'),
        ('account', '0030_connexion'),
        ('tool', '0068_auto_20230330_1358'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titre')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('is_share', models.BooleanField(default=0, verbose_name='Mutualisé ?')),
                ('is_student', models.BooleanField(default=0, verbose_name='Livre élève ?')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('texte', models.TextField(blank=True, null=True, verbose_name='Texte')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('imagefile', models.ImageField(blank=True, default='', upload_to=book.models.image_book_path, verbose_name='Fichier')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=6, max_digits=4, null=True)),
                ('author', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='author_books', to='account.Teacher', verbose_name='Enseignant')),
                ('groups', models.ManyToManyField(blank=True, related_name='books', to='group.Group', verbose_name='Groupes')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='socle.Level', verbose_name='Niveau')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='socle.Subject', verbose_name='Enseignement')),
                ('teachers', models.ManyToManyField(blank=True, editable=False, related_name='teacher_books', to='account.Teacher', verbose_name='Participants')),
            ],
        ),
        migrations.CreateModel(
            name='Doctype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titre')),
                ('ranking', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titre')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, editable=False, null=True)),
                ('content', models.TextField(blank=True, verbose_name='Texte')),
                ('file', models.FileField(blank=True, default='', upload_to=book.models.document_path, verbose_name='Fichiers')),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titre')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('is_share', models.BooleanField(default=0, verbose_name='Mutualisé ?')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_documents', to='account.Teacher', verbose_name='Auteur')),
                ('bibliotex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='bibliotex.Bibliotex', verbose_name='Bibliotex')),
                ('doctype', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='book.Doctype', verbose_name='Type de document')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='qcm.Exercise', verbose_name='Exercices')),
            ],
        ),
        migrations.CreateModel(
            name='Documentex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Enoncé en LaTeX')),
                ('content_html', models.TextField(blank=True, null=True)),
                ('correction', models.TextField(blank=True, default='', null=True, verbose_name='Correction en LaTeX')),
                ('correction_html', models.TextField(blank=True, default='', null=True)),
                ('is_publish_cor', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('calculator', models.BooleanField(default=0, verbose_name='Calculatrice ?')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('duration', models.PositiveIntegerField(blank=True, default=15, verbose_name='Durée estimée - en minutes')),
                ('is_python', models.BooleanField(default=0, verbose_name='Python ?')),
                ('is_scratch', models.BooleanField(default=0, verbose_name='Scratch ?')),
                ('is_tableur', models.BooleanField(default=0, verbose_name='Tableur ?')),
                ('is_print', models.BooleanField(default=0, verbose_name='Imprimé ?')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='A partir de')),
                ('stop', models.DateTimeField(blank=True, null=True, verbose_name='Date de verrouillage')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, editable=False, null=True)),
                ('point', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Points')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_chapterxtexs', to='account.Teacher', verbose_name='Enseignant')),
                ('document', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='documentexs', to='book.Document')),
                ('exotex', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='documentexs', to='bibliotex.Exotex')),
                ('knowledges', models.ManyToManyField(related_name='documentexs', to='socle.Knowledge', verbose_name='Savoir faire associés complémentaires')),
                ('skills', models.ManyToManyField(blank=True, related_name='documentexs', to='socle.Skill', verbose_name='Compétences ciblées')),
                ('teacher', models.ManyToManyField(blank=True, related_name='teacher_chapterxtexs', to='account.Teacher', verbose_name='Participants')),
            ],
            options={
                'unique_together': {('exotex', 'document')},
            },
        ),
        migrations.AddField(
            model_name='document',
            name='exotex',
            field=models.ManyToManyField(blank=True, related_name='chapters', through='book.Documentex', to='bibliotex.Exotex', verbose_name='Exotex'),
        ),
        migrations.AddField(
            model_name='document',
            name='flashcard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='flashcard.Flashcard', verbose_name='Flashcard'),
        ),
        migrations.AddField(
            model_name='document',
            name='flashpack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='flashcard.Flashpack', verbose_name='Flashpack'),
        ),
        migrations.AddField(
            model_name='document',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='socle.Level', verbose_name='Niveau'),
        ),
        migrations.AddField(
            model_name='document',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='tool.Question', verbose_name='Question'),
        ),
        migrations.AddField(
            model_name='document',
            name='quizz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='tool.Quizz', verbose_name='Quizz'),
        ),
        migrations.AddField(
            model_name='document',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='socle.Subject', verbose_name='Enseignement'),
        ),
        migrations.AddField(
            model_name='document',
            name='teachers',
            field=models.ManyToManyField(blank=True, related_name='documents', to='account.Teacher', verbose_name='Participants'),
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Titre')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('is_share', models.BooleanField(default=0, verbose_name='Mutualisé ?')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, editable=False, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_chapters', to='account.Teacher', verbose_name='Enseignant')),
                ('book', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='book.Book')),
                ('documents', models.ManyToManyField(blank=True, related_name='chapters', to='book.Document', verbose_name='Documents')),
                ('teachers', models.ManyToManyField(blank=True, related_name='teacher_chapters', to='account.Teacher', verbose_name='Participants')),
            ],
        ),
    ]
