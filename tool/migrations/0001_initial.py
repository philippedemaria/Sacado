# Generated by Django 3.0.5 on 2021-02-09 14:59

import account.models
import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import tool.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0024_response'),
        ('group', '0014_auto_20201229_1908'),
        ('socle', '0007_auto_20201215_0741'),
    ]

    operations = [
        migrations.CreateModel(
            name='Qrandom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Titre')),
                ('texte', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Enoncé')),
                ('is_publish', models.BooleanField(default=1, verbose_name='Publié ?')),
                ('qtype', models.PositiveIntegerField(default=2, editable=False)),
                ('calculator', models.BooleanField(default=0, verbose_name='Calculatrice ?')),
                ('duration', models.PositiveIntegerField(blank=True, default=20, verbose_name='Durée')),
                ('knowledge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qrandom', to='socle.Knowledge')),
                ('teacher', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='qrandom', to='account.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, default='', max_length=255, verbose_name='Réponse écrite')),
                ('calculator', models.BooleanField(default=0, verbose_name='Calculatrice ?')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('qtype', models.PositiveIntegerField(default=3, editable=False)),
                ('imagefile', models.ImageField(blank=True, default='', upload_to=tool.models.question_directory_path, verbose_name='Image')),
                ('is_publish', models.BooleanField(default=1, verbose_name='Publié ?')),
                ('is_radio', models.BooleanField(default=0, verbose_name='Type de réponse ?')),
                ('is_correction', models.BooleanField(default=0, verbose_name='Correction ?')),
                ('duration', models.PositiveIntegerField(blank=True, default=20, verbose_name='Durée')),
                ('point', models.PositiveIntegerField(blank=True, default=1000, verbose_name='Point')),
                ('is_correct', models.BooleanField(default=1, verbose_name='Réponse correcte ?')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, editable=False, null=True)),
                ('knowledge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question', to='socle.Knowledge')),
            ],
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Titre')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='', verbose_name='Texte ')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, editable=False, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, default=0, verbose_name="Durée d'affichage")),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
            ],
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='variable')),
                ('is_integer', models.BooleanField(default=1, verbose_name='Valeur entière ?')),
                ('maximum', models.IntegerField(default=10)),
                ('minimum', models.IntegerField(default=0)),
                ('words', models.CharField(blank=True, max_length=255, verbose_name='Liste de valeurs')),
                ('qrandom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='tool.Qrandom')),
            ],
        ),
        migrations.CreateModel(
            name='VariableImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='', upload_to=tool.models.variable_directory_path, verbose_name='Image')),
                ('variable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variable_img', to='tool.Variable')),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='Titre')),
                ('remark', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Texte*')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('imagefile', models.ImageField(default='', upload_to=tool.models.tool_directory_path, verbose_name='Image')),
                ('is_publish', models.BooleanField(default=1, verbose_name='Publié ?')),
                ('is_asso', models.BooleanField(default=1, verbose_name="Nécessite l'adhésion SACADO ?")),
                ('url', models.CharField(blank=True, default='', max_length=255, verbose_name='url de substitution')),
                ('teachers', models.ManyToManyField(blank=True, editable=False, related_name='tools', to='account.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Quizz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=account.models.generate_code, max_length=100, unique=True, verbose_name='Code')),
                ('title', models.CharField(max_length=255, verbose_name='Titre du quizz')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('vignette', models.ImageField(blank=True, default='', null=True, upload_to=tool.models.quizz_directory_path, verbose_name="Vignette d'accueil")),
                ('is_music', models.BooleanField(default=0, verbose_name='En musique ?')),
                ('is_share', models.BooleanField(default=0, verbose_name='Mutualisé ?')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('is_questions', models.BooleanField(default=0, editable=False)),
                ('is_numeric', models.BooleanField(default=0, verbose_name='Type de réponse')),
                ('is_mark', models.BooleanField(default=0, verbose_name='Récupérer les réponses ?')),
                ('is_lock', models.BooleanField(default=0, verbose_name='Verrouiller ?')),
                ('is_random', models.BooleanField(default=0, verbose_name='Aléatoire ?')),
                ('interslide', models.PositiveIntegerField(blank=True, default=10, verbose_name='Temps entre les questions')),
                ('groups', models.ManyToManyField(blank=True, editable=False, related_name='quizz', to='group.Group')),
                ('levels', models.ManyToManyField(blank=True, related_name='quizz', to='socle.Level')),
                ('qrandoms', models.ManyToManyField(blank=True, editable=False, related_name='quizz', to='tool.Qrandom')),
                ('questions', models.ManyToManyField(blank=True, editable=False, related_name='quizz', to='tool.Question')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quizz', to='socle.Subject')),
                ('teacher', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_quizz', to='account.Teacher')),
                ('themes', models.ManyToManyField(blank=True, related_name='quizz', to='socle.Theme')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Questionplayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255, verbose_name='Réponse')),
                ('score', models.PositiveIntegerField(default=0, editable=False)),
                ('timer', models.CharField(editable=False, max_length=255)),
                ('question', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='question_player', to='tool.Question')),
                ('student', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='student_player', to='account.Student')),
            ],
            options={
                'unique_together': {('student', 'question')},
            },
        ),
        migrations.AddField(
            model_name='question',
            name='students',
            field=models.ManyToManyField(blank=True, editable=False, related_name='question', through='tool.Questionplayer', to='account.Student'),
        ),
        migrations.CreateModel(
            name='Diaporama',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=account.models.generate_code, max_length=100, unique=True, verbose_name='Code')),
                ('title', models.CharField(max_length=255, verbose_name='Titre du quizz')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('vignette', models.ImageField(blank=True, default='', null=True, upload_to=tool.models.quizz_directory_path, verbose_name="Vignette d'accueil")),
                ('is_share', models.BooleanField(default=0, verbose_name='Mutualisé ?')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('groups', models.ManyToManyField(blank=True, editable=False, related_name='presentation', to='group.Group')),
                ('levels', models.ManyToManyField(blank=True, related_name='presentation', to='socle.Level')),
                ('slides', models.ManyToManyField(blank=True, editable=False, related_name='diapositive', to='tool.Slide')),
                ('students', models.ManyToManyField(blank=True, editable=False, related_name='user_presentation', to='account.Student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='presentation', to='socle.Subject')),
                ('teacher', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_presentation', to='account.Teacher')),
                ('themes', models.ManyToManyField(blank=True, related_name='presentation', to='socle.Theme')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageanswer', models.ImageField(blank=True, default='', null=True, upload_to=tool.models.choice_directory_path, verbose_name='Image')),
                ('answer', models.TextField(blank=True, default='', max_length=255, null=True, verbose_name='Réponse écrite')),
                ('is_correct', models.BooleanField(default=0, verbose_name='Réponse correcte ?')),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='tool.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scoretotal', models.PositiveIntegerField(default=0, editable=False)),
                ('quizz', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='player', to='tool.Quizz')),
                ('student', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='player', to='account.Student')),
            ],
            options={
                'unique_together': {('student', 'quizz')},
            },
        ),
    ]
