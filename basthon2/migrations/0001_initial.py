# Generated by Django 3.0.5 on 2022-04-13 08:26

import basthon2.models
import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('socle', '0006_auto_20211006_2229'),
        ('account', '0017_auto_20220328_0857'),
        ('qcm', '0027_exercise_audiofile'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExoPython',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='titre')),
                ('instruction', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Consigne*')),
                ('preambule_cache', models.TextField(blank=True, null=True, verbose_name='preambule caché')),
                ('preambule_visible', models.TextField(blank=True, null=True, verbose_name='preambule visible')),
                ('prog_cor', models.TextField(blank=True, null=True, verbose_name='Corrigé (programme)')),
                ('test_rep_entree', models.TextField(blank=True, null=True, verbose_name='entree test avec reponse')),
                ('test_rep_sortie', models.TextField(blank=True, null=True, verbose_name='sortie test avec reponse')),
                ('autotest', models.TextField(blank=True, null=True, verbose_name='entree autotest')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='A partir de')),
                ('date_limit', models.DateTimeField(blank=True, null=True, verbose_name='Date limite du rendu')),
                ('lock', models.DateTimeField(blank=True, null=True, verbose_name='Verrouillé dès le')),
                ('imagefile', models.ImageField(blank=True, default='', upload_to=basthon2.models.vignette_directory_path, verbose_name="Vignette d'accueil")),
                ('duration', models.PositiveIntegerField(blank=True, default=15, verbose_name='Durée (min.)')),
                ('is_share', models.BooleanField(default=0, verbose_name='Mutualisé ?')),
                ('is_realtime', models.BooleanField(default=0, verbose_name='Temps réel ?')),
                ('is_mark', models.BooleanField(default=0, verbose_name='Notation ?')),
                ('is_collaborative', models.BooleanField(default=0, verbose_name='Collaboratif ?')),
                ('is_autocorrection', models.BooleanField(default=0, verbose_name='Autocorrection ?')),
                ('mark', models.PositiveIntegerField(default=0, verbose_name='Sur ?')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, editable=False, null=True)),
                ('text_cor', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Correction écrite')),
                ('file_cor', models.ImageField(blank=True, default='', upload_to=basthon2.models.vignette_directory_path, verbose_name='Fichier de correction')),
                ('video_cor', models.CharField(blank=True, default='', max_length=100, verbose_name='Code de la vidéo Youtube')),
                ('is_publish_cor', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('criterions', models.ManyToManyField(blank=True, related_name='criteres', to='qcm.Criterion')),
                ('knowledges', models.ManyToManyField(blank=True, related_name='knowledgeexoPython', to='socle.Knowledge', verbose_name='Savoir faire évalués')),
                ('parcourses', models.ManyToManyField(blank=True, related_name='parcoursexoPython', to='qcm.Parcours', verbose_name='Parcours attachés')),
                ('skills', models.ManyToManyField(blank=True, related_name='skillexoPython', to='socle.Skill', verbose_name='Compétences évaluées')),
                ('students', models.ManyToManyField(blank=True, related_name='studentsexoPython', to='account.Student')),
                ('teacher', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacherexoPython', to='account.Teacher')),
            ],
        ),
    ]
