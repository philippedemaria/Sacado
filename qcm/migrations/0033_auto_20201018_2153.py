# Generated by Django 3.0.5 on 2020-10-18 20:53

import account.models
import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import qcm.models


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0013_auto_20200930_1741'),
        ('socle', '0003_subject_shortname'),
        ('qcm', '0032_relationship_instruction'),
    ]

    operations = [
        migrations.AddField(
            model_name='supportfile',
            name='is_file',
            field=models.BooleanField(default=0, verbose_name='Fichier ?'),
        ),
        migrations.AddField(
            model_name='supportfile',
            name='is_image',
            field=models.BooleanField(default=0, verbose_name='Iage/Scan ?'),
        ),
        migrations.AddField(
            model_name='supportfile',
            name='is_python',
            field=models.BooleanField(default=0, verbose_name='Python ?'),
        ),
        migrations.AddField(
            model_name='supportfile',
            name='is_scratch',
            field=models.BooleanField(default=0, verbose_name='Scratch ?'),
        ),
        migrations.AddField(
            model_name='supportfile',
            name='is_text',
            field=models.BooleanField(default=0, verbose_name='Texte ?'),
        ),
        migrations.AlterField(
            model_name='parcours',
            name='stop',
            field=models.DateField(blank=True, null=True, verbose_name='Verrouillée à partir de'),
        ),
        migrations.AlterField(
            model_name='parcours',
            name='stopper',
            field=models.TimeField(blank=True, null=True, verbose_name='Heure de verrouillage'),
        ),
        migrations.CreateModel(
            name='Writtenanswerbystudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('imagefile', models.ImageField(blank=True, default='', null=True, upload_to=qcm.models.file_directory_student, verbose_name='Scan ou image ou Photo')),
                ('answer', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', null=True)),
                ('comment', models.TextField(default='', editable=False, null=True)),
                ('relationship', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='relationship_written_answer', to='qcm.Relationship')),
                ('student', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='student_written_answer', to='account.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Customexercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=account.models.generate_code, max_length=100, unique=True, verbose_name='Code du parcours*')),
                ('instruction', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Consigne*')),
                ('calculator', models.BooleanField(default=0, verbose_name='Calculatrice ?')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='A partir de')),
                ('date_limit', models.DateTimeField(blank=True, null=True, verbose_name='Date limite du rendu')),
                ('lock', models.DateTimeField(blank=True, null=True, verbose_name='Verrouillé à partir de')),
                ('imagefile', models.ImageField(blank=True, default='', upload_to=qcm.models.vignette_directory_path, verbose_name="Vignette d'accueil")),
                ('duration', models.PositiveIntegerField(blank=True, default=15, verbose_name='Durée estimée (min.)')),
                ('is_python', models.BooleanField(default=0, verbose_name='Python ?')),
                ('is_scratch', models.BooleanField(default=0, verbose_name='Scratch ?')),
                ('is_file', models.BooleanField(default=0, verbose_name='Fichier ?')),
                ('is_image', models.BooleanField(default=0, verbose_name='Image/Scan ?')),
                ('is_text', models.BooleanField(default=0, verbose_name='Texte ?')),
                ('is_mark', models.BooleanField(default=0, verbose_name='Notation ?')),
                ('mark', models.PositiveIntegerField(default=0, verbose_name='Sur ?')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, editable=False, null=True)),
                ('file_cor', models.ImageField(blank=True, default='', upload_to=qcm.models.vignette_directory_path, verbose_name='Fichier de correction')),
                ('video_cor', models.CharField(blank=True, default='', max_length=100, verbose_name='Code de la vidéo Youtube')),
                ('is_publish_cor', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('knowledges', models.ManyToManyField(blank=True, related_name='knowledge_customexercises', to='socle.Knowledge', verbose_name='Savoir faire évalués')),
                ('parcourses', models.ManyToManyField(blank=True, related_name='parcours_customexercises', to='qcm.Parcours', verbose_name='Parcours attachés')),
                ('skills', models.ManyToManyField(blank=True, related_name='skill_customexercises', to='socle.Skill', verbose_name='Compétences évaluées')),
                ('students', models.ManyToManyField(blank=True, related_name='students_customexercises', to='account.Student')),
                ('teacher', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='teacher_customexercises', to='account.Teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('teacher', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_comment', to='account.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Customanswerbystudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('imagefile', models.ImageField(blank=True, default='', null=True, upload_to=qcm.models.file_directory_student, verbose_name='Scan ou image ou Photo')),
                ('answer', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', null=True)),
                ('comment', models.TextField(default='', null=True)),
                ('point', models.CharField(default='', max_length=3, verbose_name='Note')),
                ('customexercise', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='customexercise_custom_answer', to='qcm.Customexercise')),
                ('parcours', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='parcours_custom_answer', to='qcm.Parcours')),
                ('student', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='student_custom_answer', to='account.Student')),
            ],
            options={
                'unique_together': {('student', 'parcours', 'customexercise')},
            },
        ),
        migrations.CreateModel(
            name='Correctionskillcustomexercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('point', models.CharField(default='', editable=False, max_length=3)),
                ('customexercise', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='customexercise_correctionskill', to='qcm.Customexercise')),
                ('parcours', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='parcours_customskill_answer', to='qcm.Parcours')),
                ('skill', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='skill_correctionskill', to='socle.Skill')),
                ('student', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='student_correctionskill', to='account.Student')),
            ],
            options={
                'unique_together': {('student', 'customexercise', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='Correctionknowledgecustomexercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('point', models.CharField(default='', editable=False, max_length=3)),
                ('customexercise', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='customexercise_correctionknowledge', to='qcm.Customexercise')),
                ('knowledge', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='knowledge_correctionknowledge', to='socle.Knowledge')),
                ('parcours', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='parcours_customknowledge_answer', to='qcm.Parcours')),
                ('student', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='student_correctionknowledge', to='account.Student')),
            ],
            options={
                'unique_together': {('student', 'customexercise', 'knowledge')},
            },
        ),
    ]
