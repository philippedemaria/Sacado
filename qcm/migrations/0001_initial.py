# Generated by Django 3.0.5 on 2020-06-01 10:52

import account.models
from django.db import migrations, models
import django.db.models.deletion
import qcm.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('socle', '0001_initial'),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exercises', to='socle.Knowledge', verbose_name='Savoir faire associé - Titre')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exercises', to='socle.Level', verbose_name='Niveau')),
                ('students', models.ManyToManyField(blank=True, related_name='exercises', to='account.Student', verbose_name='Travail fait')),
            ],
        ),
        migrations.CreateModel(
            name='Parcours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=account.models.generate_code, max_length=100, unique=True, verbose_name='Code du parcours*')),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('color', models.CharField(default='#00819F', max_length=255, verbose_name='Couleur')),
                ('is_share', models.BooleanField(default=1, verbose_name='Partagé ?')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('linked', models.BooleanField(default=0, editable=False)),
                ('is_favorite', models.BooleanField(default=1, verbose_name='Favori ?')),
                ('is_evaluation', models.BooleanField(default=0, verbose_name='Evaluation ?')),
                ('duration', models.PositiveIntegerField(default=0, verbose_name='Temps de chargement (min.)')),
                ('start', models.DateField(blank=True, null=True, verbose_name='Date de début de publication')),
                ('starter', models.TimeField(blank=True, null=True, verbose_name='Heure de début de publication')),
                ('stop', models.DateField(blank=True, null=True, verbose_name='Date de fin de publication')),
                ('stopper', models.TimeField(blank=True, null=True, verbose_name='Heure de fin de publication')),
                ('vignette', models.ImageField(blank=True, default='', upload_to=qcm.models.vignette_directory_path, verbose_name='Image du parcours')),
                ('author', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='author_parcours', to='account.Teacher', verbose_name='Auteur')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, editable=False)),
                ('is_publish', models.BooleanField(default=1)),
                ('start', models.DateField(blank=True, null=True, verbose_name='A partir de')),
                ('date_limit', models.DateField(blank=True, null=True, verbose_name='Date limite du rendu')),
                ('is_evaluation', models.BooleanField(default=0)),
                ('duration', models.PositiveIntegerField(default=15, verbose_name='Durée estimée en minutes')),
                ('situation', models.PositiveIntegerField(default=10, help_text='Pour valider le qcm', verbose_name='Nombre minimal de situations')),
                ('beginner', models.TimeField(blank=True, null=True, verbose_name='Heure du début')),
                ('exercise', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exercise_relationship', to='qcm.Exercise')),
                ('parcours', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='parcours_relationship', to='qcm.Parcours')),
                ('skills', models.ManyToManyField(blank=True, editable=False, related_name='skills_relationship', to='socle.Skill')),
                ('students', models.ManyToManyField(blank=True, editable=False, related_name='students_relationship', to='account.Student')),
            ],
            options={
                'unique_together': {('exercise', 'parcours')},
            },
        ),
        migrations.CreateModel(
            name='Supportfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annoncement', models.TextField(verbose_name='Précision sur le savoir faire')),
                ('code', models.CharField(blank=True, default='', max_length=100, unique=True, verbose_name='Code*')),
                ('situation', models.PositiveIntegerField(default=10, help_text='Pour valider le qcm', verbose_name='Nombre minimal de situations')),
                ('calculator', models.BooleanField(default=0, verbose_name='Calculatrice ?')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('width', models.PositiveIntegerField(default=750, verbose_name='Largeur')),
                ('height', models.PositiveIntegerField(default=550, verbose_name='Hauteur')),
                ('ggbfile', models.FileField(default='', upload_to=qcm.models.quiz_directory_path, verbose_name='Fichier ggb')),
                ('imagefile', models.ImageField(default='', upload_to=qcm.models.image_directory_path, verbose_name="Vignette d'accueil")),
                ('toolBar', models.BooleanField(default=0, verbose_name='Barre des outils ?')),
                ('menuBar', models.BooleanField(default=0, verbose_name='Barre de menu ?')),
                ('algebraInput', models.BooleanField(default=0, verbose_name='Multi-fenêtres ?')),
                ('resetIcon', models.BooleanField(default=0, verbose_name='Bouton Reset ?')),
                ('dragZoom', models.BooleanField(default=0, verbose_name='Zoom/déplacement ?')),
                ('is_title', models.BooleanField(default=0, editable=False, verbose_name="titre pour l'organisation des parcours")),
                ('is_subtitle', models.BooleanField(default=0, editable=False, verbose_name="sous-titre pour l'organisation des parcours")),
                ('duration', models.PositiveIntegerField(blank=True, default=15, verbose_name='Durée estimée - en minutes')),
                ('author', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='author_ggbfile', to='account.Teacher')),
                ('knowledge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='knowledge_ggbfile', to='socle.Knowledge', verbose_name='Savoir faire associé - Titre')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='level_ggbfile', to='socle.Level', verbose_name='Niveau')),
                ('skills', models.ManyToManyField(blank=True, related_name='skills_supportfile', to='socle.Skill', verbose_name='Compétences ciblées')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='theme_ggbfile', to='socle.Theme', verbose_name='Thème')),
            ],
        ),
        migrations.CreateModel(
            name='Studentanswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.PositiveIntegerField(default=0)),
                ('numexo', models.PositiveIntegerField(default=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('secondes', models.CharField(editable=False, max_length=255)),
                ('exercise', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='ggbfile_studentanswer', to='qcm.Exercise')),
                ('parcours', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parcours_studentanswer', to='qcm.Parcours')),
                ('student', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='student_studentanswer', to='account.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Remediation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=255, verbose_name='Titre')),
                ('video', models.CharField(blank=True, default='', max_length=255, verbose_name='url de la vidéo')),
                ('mediation', models.FileField(blank=True, default='', upload_to=qcm.models.file_directory_path, verbose_name='Fichier - pdf')),
                ('sort', models.BooleanField(default=0, verbose_name='Type du document')),
                ('duration', models.PositiveIntegerField(default=15, verbose_name='Durée estimée (en min.)')),
                ('relationship', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, related_name='relationship_remediation', to='qcm.Relationship')),
            ],
        ),
        migrations.AddField(
            model_name='parcours',
            name='exercises',
            field=models.ManyToManyField(blank=True, related_name='exercises_parcours', through='qcm.Relationship', to='qcm.Exercise'),
        ),
        migrations.AddField(
            model_name='parcours',
            name='level',
            field=models.ForeignKey(blank=True, default='', editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='level_parcours', to='socle.Level'),
        ),
        migrations.AddField(
            model_name='parcours',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='students_to_parcours', to='account.Student', verbose_name='Elèves de ce parcours'),
        ),
        migrations.AddField(
            model_name='parcours',
            name='teacher',
            field=models.ForeignKey(blank=True, default='', editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='teacher_parcours', to='account.Teacher'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='supportfile',
            field=models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.PROTECT, related_name='supportfile_exercise', to='qcm.Supportfile', verbose_name='Fichier Géogebra'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='theme_exercise', to='socle.Theme', verbose_name='Thème'),
        ),
        migrations.CreateModel(
            name='Constraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='', editable=False, max_length=8)),
                ('scoremin', models.PositiveIntegerField(default=80, editable=False)),
                ('relationship', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, related_name='relationship_constraint', to='qcm.Relationship')),
            ],
        ),
        migrations.CreateModel(
            name='Resultexercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.PositiveIntegerField(default=0)),
                ('exercise', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='results_e', to='qcm.Exercise')),
                ('student', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='results_e', to='account.Student')),
            ],
            options={
                'unique_together': {('student', 'exercise')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='exercise',
            unique_together={('knowledge', 'supportfile')},
        ),
    ]
